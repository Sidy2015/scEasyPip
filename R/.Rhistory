devtools::create("scEasyPip")
scEasyPip
library(scEasyPip)
remove.packages(scEasyPip)
library(fwefwf)
remove.packages(scEasyPip)
remove.packages('scEasyPip')
library(fwefwf)
library(scEasyPip)
scEasyPip
scEasyPip::read_10xdata
scEasyPip::run_seurat
devtools::install_github(theob0t/scEasyPip)
devtools::install_github(Theob0t/scEasyPip)
devtools::install_github('Theob0t/scEasyPip')
library(scEasyPip)
scEasyPip::run_seurat()
run_seurat()
bkbjnl
install.packages(“languageserver”)
install.packages('languageserver')
file.path(R.home(), "bin", "R")
library(Seurat)
library(scEasyPip)
library(clustree)
prox <- run_seurat(data.dir = 'C:/Users/tb2928.admin.BB08MPUL87-SC/OneDrive - cumc.columbia.edu/Desktop/CellStemCell_2017/Cell2017_data/prox',output.dir = 'C:/Users/tb2928.admin.BB08MPUL87-SC/OneDrive - cumc.columbia.edu/Desktop/CellStemCell_2017/Cell2017_data/prox')
prox <- run_seurat(data.dir = 'C:/Users/tb2928.admin.BB08MPUL87-SC/OneDrive - cumc.columbia.edu/Desktop/CellStemCell_2017/Cell2017_data/prox',output.dir = 'C:/Users/tb2928.admin.BB08MPUL87-SC/OneDrive - cumc.columbia.edu/Desktop/CellStemCell_2017/Cell2017_data/prox')
prox <- run_seurat(data.dir = 'C:/Users/tb2928.admin.BB08MPUL87-SC/OneDrive - cumc.columbia.edu/Desktop/CellStemCell_2017/Cell2017_data/prox',output.dir = 'C:/Users/tb2928.admin.BB08MPUL87-SC/OneDrive - cumc.columbia.edu/Desktop/CellStemCell_2017/Cell2017_data/prox')
library(dplyr)
library(scEasyPip)
library(clustree)
library(Seurat)
library(patchwork)
library(EnhancedVolcano)
library(SeuratDisk)
library(stringr)
library(rlist)
library(ggplot2)
getwd()
kr12 <- readRDS('KR001-Young_SI_Crypt-KR002_Old_SI_Crypt/seurat.obj.Rds)
kr12 <- readRDS('KR001-Young_SI_Crypt-KR002_Old_SI_Crypt/seurat.obj.Rds')
kr12 <- readRDS('KR001-Young_SI_Crypt-KR002_Old_SI_Crypt/seurat.obj.Rds')
kr1_2 <- readRDS('KR001-Young_SI_Crypt-KR002_Old_SI_Crypt/seurat.obj.Rds')
kr1 <- subset(kr1_2, subset = orig.ident == 'kr001')
kr2 <- subset(kr1_2, subset = orig.ident == 'kr002')
kr1$orig.ident
as.factor('Young_SI_Crypt')
kr1$orig.ident <- as.factor('Young_SI_Crypt')
kr1$orig.ident
kr2$orig.ident <- as.factor('Old_SI_Crypt')
run_seurat(object = kr1, output.dir = 'KR001_Young_SI_Crypt/',project.name = 'Young_SI_Crypt', sctransform = T, logtransform = T, find.all.markers = F, save.rds = T)
run_seurat(object = kr1, output.dir = 'KR001_Young_SI_Crypt/',project.name = 'Young_SI_Crypt', sctransform = T, logtransform = T, find.all.markers = F, save.rds = T)
```
run_seurat(object = kr2, output.dir = 'KR002_Old_SI_Crypt/',project.name = 'Old_SI_Crypt', sctransform = T, logtransform = T, find.all.markers = F, save.rds = T)
gc()
library(dplyr)
library(scEasyPip)
library(clustree)
library(Seurat)
library(patchwork)
library(EnhancedVolcano)
library(SeuratDisk)
library(stringr)
library(rlist)
library(ggplot2)
View(kr1)
kr <- readRDS('integrated/kr.Rds')
kr
gc()
gc()
gc()
library(scEasyPip)
kr <- readRDS('integrated/kr.Rds')
DimPlot(kr$sample)
DimPlot(kr$sample)
View(kr)
DimPlot(kr)
DimPlot(kr, group.by = 'sample)
DimPlot(kr, group.by = 'sample')
DimPlot(kr, group.by = 'sample')
DimPlot(kr, group.by = 'orig.ident')
grepl(kr$orig.ident=='Epi')
grepl(x=kr$orig.ident, pattern='Epi')
kr$location <- ifelse(grepl(x=kr$orig.ident, pattern='Epi'), yes = 'Epithelium', 'Mesenchyme')
DimPlot(kr, group.by = 'location')
DimPlot(kr, group.by = 'orig.ident')
kr$location <- ifelse(grepl(x=kr$orig.ident, pattern='Crypt'), yes = 'Epithelium', kr$location)
DimPlot(kr, group.by = 'location')
epi <- subset(kr, subset = location == 'Epithelium')
DimPlot(epi)
DimPlot(epi, group.by = sample)
DimPlot(epi, group.by = 'sample')
FeaturePlot(epi, 'Lgr5')
epi2 <- RunSeurat(object = epi, output.dir = 'integrated/',project.name = 'epi_colon_si', sctransform = T, cellcycle = T, find.all.markers = F)
kr <- readRDS('integrated/kr.Rds')
DimPlot(kr, group.by = 'orig.ident')
library(scEasyPip)
DimPlot(kr, group.by = 'orig.ident')
kr$location <- ifelse(grepl(x=kr$orig.ident, pattern='Epi'), yes = 'Epithelium', 'Mesenchyme')
kr$location <- ifelse(grepl(x=kr$orig.ident, pattern='Crypt'), yes = 'Epithelium', kr$location)
DimPlot(kr, group.by = 'location')
epi <- subset(kr, subset = location == 'Epithelium')
DimPlot(epi, group.by = 'sample')
epi2 <- RunSeurat(object = epi, output.dir = 'integrated/',project.name = 'epi_colon_si', sctransform = T, cellcycle = T, find.all.markers = F)
epi2
DimPlot(epi2)
DimPlot(epi2, group.by = 'location')
DimPlot(epi2, group.by = 'sample')
DimPlot(kr, group.by = 'location')
DimPlot(kr, group.by = 'orig.ident')
epi2$age <- ifelse(grepl(x=epi2$orig.ident, pattern='Young'), yes = 'Young', 'Old')
DimPlot(epi2, group.by = 'age')
View(epi2)
markers <- FindMarkers(object = epi2,ident.1 = 'Old', ident.2 = 'Young', group.by = 'orig.ident', test.use = 'MAST',assay = 'RNA', logfc.threshold = 0.15, only.pos = T)
markers <- FindMarkers(object = epi2,ident.1 = 'Old', ident.2 = 'Young', group.by = 'age', test.use = 'MAST',assay = 'RNA', logfc.threshold = 0.15, only.pos = T)
write.csv(markers, file = 'integrated/markers.csv')
avg_exp <- AverageExpression(epi2, assays = 'RNA', group.by = 'age', add.ident = 'Young')
avg_exp <- AverageExpression(epi2, assays = 'RNA', group.by = 'age')
View(avg_exp)
avg_exp[["RNA"]]
write.csv(avg_exp, file = 'integrated/pseudobulk_SI_colon.csv')
avg_exp <- AverageExpression(epi2, assays = 'RNA', group.by = 'age', slot = 'scale.data')
View(avg_exp)
avg_exp[["RNA"]]
View(avg_exp)
avg_exp[["RNA"]]
density(avg_exp$RNA)
avg_exp <- avg_exp$RNA
avg_exp
View(avg_exp)
density(avg_exp[,'Old'])
plot(density(avg_exp[,'Old']))
plot(density(avg_exp[,'Young']))
plot(density(avg_exp[,'Old']))
plot(density(avg_exp[,]))
write.csv(avg_exp, file = 'integrated/pseudobulk_SI_colon.csv')
exp2
epi2
DimPlot(epi2)
epi2 <- FindClusters(epi2, resolution = 0.5)
DimPlot(epi2)
SplitObject(epi2, split.by = 'sample')
si <- SplitObject(epi2, split.by = 'sample')$SI
#si <- SplitObject(epi2, split.by = 'sample')$SI
si <- FindClusters(si, resolution = 0.5)
#si <- SplitObject(epi2, split.by = 'sample')$SI
si <- FindNeighbors(si)
si <- FindClusters(si, resolution = 0.5)
DimPlot(si)
FindCelltype(FindAllMarkers(si, test.use = 'MAST', assay = 'RNA', slot = 'scale.data'), consensus.file = '../../markers/markers_duodenum_mm_yan.csv', output.dir = 'SI/integrated/celltype/')
FindCelltype(object = FindAllMarkers(si, test.use = 'MAST', assay = 'RNA', slot = 'scale.data'), consensus.file = '../../markers/markers_duodenum_mm_yan.csv', output.dir = 'SI/integrated/celltype/')
write.cvs(FindAllMarkers(si, test.use = 'MAST', assay = 'RNA', slot = 'scale.data'), 'SI/integrated/celltype/si_markers.csv')
write.csv(FindAllMarkers(si, test.use = 'MAST', assay = 'RNA', slot = 'scale.data'), 'SI/integrated/celltype/si_markers.csv')
FindCelltype(object = si, markers.file = 'SI/integrated/celltype/si_markers.csv', consensus.file = '../../markers/markers_duodenum_mm_yan.csv', output.dir = 'SI/integrated/celltype/')
FindCelltype(object = si, markers.file = 'SI/integrated/celltype/si_markers.csv', consensus.file = '../../markers/markers_duodenum_mm_yan.csv', output.dir = 'SI/integrated/celltype/')
levels(si)
setwd("C:/Users/tb2928.admin.BB08MPUL87-SC/OneDrive - cumc.columbia.edu/Desktop/scRNA_seq_SEURAT/scRNA_package/scEasyPip/R")
saveRDS(si,'C:/Users/tb2928.admin.BB08MPUL87-SC/OneDrive - cumc.columbia.edu/Desktop/Aging/Single_Cell/SI/integrated/si.rds')
